server {
    listen $PORT;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Handle client-side routing for Next.js
    location / {
        try_files $uri $uri.html $uri/ /index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Enhanced health check endpoint
    location /health {
        access_log off;
        return 200 '{"status":"OK","service":"ci-cd-frontend","timestamp":"$time_iso8601","version":"1.0.0"}\n';
        add_header Content-Type application/json;
    }

    # Readiness probe endpoint
    location /ready {
        access_log off;
        return 200 '{"status":"READY","timestamp":"$time_iso8601"}\n';
        add_header Content-Type application/json;
    }

    # Liveness probe endpoint  
    location /live {
        access_log off;
        return 200 '{"status":"ALIVE","timestamp":"$time_iso8601"}\n';
        add_header Content-Type application/json;
    }

    # Status endpoint with more details
    location /status {
        access_log off;
        return 200 '{"service":"CI/CD Playground Frontend","status":"operational","timestamp":"$time_iso8601","nginx_version":"$nginx_version"}\n';
        add_header Content-Type application/json;
    }

    # Security: deny access to dotfiles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}