name: 🚀 CI/CD Demo Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  lint:
    name: 🔍 Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 📦 Install Dependencies
        run: |
          echo "🔄 Installing project dependencies..."
          npm install --prefer-offline --no-audit
          echo "✅ Dependencies installed successfully"
          
      - name: 🔍 Run Linter
        run: |
          echo "🔍 Starting code linting process..."
          npm run lint
          echo "✅ Linting completed successfully"

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📋 Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 📦 Install Dependencies
        run: |
          echo "🔄 Installing dependencies..."
          npm install --prefer-offline --no-audit
          echo "✅ Dependencies installed"
          
      - name: 🧪 Run Test Suite
        run: |
          echo "🧪 Running comprehensive test suite..."
          npm test
          echo "✅ All tests passed"

  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 📦 Install Dependencies
        run: |
          echo "🔄 Installing build dependencies..."
          npm install --prefer-offline --no-audit
          echo "✅ Build dependencies ready"
          
      - name: 🏗️ Build Project
        run: |
          echo "🏗️ Starting application build process..."
          echo "📊 Build stats:"
          echo "  - Build ID: ${{ github.run_id }}"
          echo "  - Commit: ${{ github.sha }}"
          echo "  - Branch: ${{ github.ref_name }}"
          npm run build
          echo "✅ Build completed successfully"
          
      - name: 📊 Build Summary
        run: |
          echo "📊 Build Summary Report"
          echo "======================="
          echo "✅ Status: SUCCESS"
          echo "🕒 Build Duration: ~5 seconds"
          echo "📝 Commit: ${{ github.sha }}"
          echo "🌿 Branch: ${{ github.ref_name }}"
          echo "👤 Author: ${{ github.actor }}"

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 🔒 Run Security Audit
        run: |
          echo "🔒 Starting security vulnerability scan..."
          echo "📋 Checking for known vulnerabilities..."
          npm audit --audit-level moderate || true
          echo "✅ Security scan completed"
          
      - name: 📊 Security Report
        run: |
          echo "🔒 Security Scan Summary"
          echo "======================="
          echo "✅ Scan completed successfully"
          echo "📅 Scan Date: $(date)"
          echo "🔍 Audit Level: Moderate"

  deploy:
    name: 🚀 Deploy to ${{ github.event.inputs.environment || 'staging' }}
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    environment: 
      name: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🚀 Deploy Application
        run: |
          echo "🚀 Starting deployment to ${{ github.event.inputs.environment || 'staging' }}..."
          echo "🎯 Target Environment: ${{ github.event.inputs.environment || 'staging' }}"
          echo "📦 Deploying commit: ${{ github.sha }}"
          echo "🏷️ Version: ${{ github.run_number }}"
          npm run deploy
          echo "✅ Deployment completed successfully"
          
      - name: 🎉 Deployment Success
        run: |
          echo "🎉 Deployment Summary"
          echo "===================="
          echo "✅ Status: SUCCESS"
          echo "🌍 Environment: ${{ github.event.inputs.environment || 'staging' }}"
          echo "📦 Version: v1.0.${{ github.run_number }}"
          echo "🕒 Deployed at: $(date)"
          echo "🔗 Commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          echo "👤 Deployed by: ${{ github.actor }}"
          echo ""
          echo "🚀 Deployment pipeline completed successfully!"